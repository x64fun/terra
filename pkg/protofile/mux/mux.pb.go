// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: mux/mux.proto

package mux

import (
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HTTPMethod int32

const (
	HTTPMethod_GET     HTTPMethod = 0
	HTTPMethod_HEAD    HTTPMethod = 1
	HTTPMethod_POST    HTTPMethod = 2
	HTTPMethod_PUT     HTTPMethod = 3
	HTTPMethod_PATCH   HTTPMethod = 4
	HTTPMethod_DELETE  HTTPMethod = 5
	HTTPMethod_CONNECT HTTPMethod = 6
	HTTPMethod_OPTIONS HTTPMethod = 7
	HTTPMethod_TRACE   HTTPMethod = 8
)

// Enum value maps for HTTPMethod.
var (
	HTTPMethod_name = map[int32]string{
		0: "GET",
		1: "HEAD",
		2: "POST",
		3: "PUT",
		4: "PATCH",
		5: "DELETE",
		6: "CONNECT",
		7: "OPTIONS",
		8: "TRACE",
	}
	HTTPMethod_value = map[string]int32{
		"GET":     0,
		"HEAD":    1,
		"POST":    2,
		"PUT":     3,
		"PATCH":   4,
		"DELETE":  5,
		"CONNECT": 6,
		"OPTIONS": 7,
		"TRACE":   8,
	}
)

func (x HTTPMethod) Enum() *HTTPMethod {
	p := new(HTTPMethod)
	*p = x
	return p
}

func (x HTTPMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HTTPMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_mux_mux_proto_enumTypes[0].Descriptor()
}

func (HTTPMethod) Type() protoreflect.EnumType {
	return &file_mux_mux_proto_enumTypes[0]
}

func (x HTTPMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HTTPMethod.Descriptor instead.
func (HTTPMethod) EnumDescriptor() ([]byte, []int) {
	return file_mux_mux_proto_rawDescGZIP(), []int{0}
}

type HTTPScheme int32

const (
	HTTPScheme_HTTP  HTTPScheme = 0
	HTTPScheme_HTTPS HTTPScheme = 1
)

// Enum value maps for HTTPScheme.
var (
	HTTPScheme_name = map[int32]string{
		0: "HTTP",
		1: "HTTPS",
	}
	HTTPScheme_value = map[string]int32{
		"HTTP":  0,
		"HTTPS": 1,
	}
)

func (x HTTPScheme) Enum() *HTTPScheme {
	p := new(HTTPScheme)
	*p = x
	return p
}

func (x HTTPScheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HTTPScheme) Descriptor() protoreflect.EnumDescriptor {
	return file_mux_mux_proto_enumTypes[1].Descriptor()
}

func (HTTPScheme) Type() protoreflect.EnumType {
	return &file_mux_mux_proto_enumTypes[1]
}

func (x HTTPScheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HTTPScheme.Descriptor instead.
func (HTTPScheme) EnumDescriptor() ([]byte, []int) {
	return file_mux_mux_proto_rawDescGZIP(), []int{1}
}

type Router struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host           string       `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Path           string       `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	PathPrefix     string       `protobuf:"bytes,3,opt,name=path_prefix,json=pathPrefix,proto3" json:"path_prefix,omitempty"`
	Methods        []HTTPMethod `protobuf:"varint,4,rep,packed,name=methods,proto3,enum=go.terra.mux.HTTPMethod" json:"methods,omitempty"`
	Headers        []string     `protobuf:"bytes,5,rep,name=headers,proto3" json:"headers,omitempty"`
	Queries        []string     `protobuf:"bytes,6,rep,name=queries,proto3" json:"queries,omitempty"`
	Schemes        []HTTPScheme `protobuf:"varint,7,rep,packed,name=schemes,proto3,enum=go.terra.mux.HTTPScheme" json:"schemes,omitempty"`
	SkipClean      bool         `protobuf:"varint,8,opt,name=skip_clean,json=skipClean,proto3" json:"skip_clean,omitempty"`
	StrictSlash    bool         `protobuf:"varint,9,opt,name=strict_slash,json=strictSlash,proto3" json:"strict_slash,omitempty"`
	UseEncodedPath bool         `protobuf:"varint,10,opt,name=use_encoded_path,json=useEncodedPath,proto3" json:"use_encoded_path,omitempty"`
}

func (x *Router) Reset() {
	*x = Router{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mux_mux_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Router) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Router) ProtoMessage() {}

func (x *Router) ProtoReflect() protoreflect.Message {
	mi := &file_mux_mux_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Router.ProtoReflect.Descriptor instead.
func (*Router) Descriptor() ([]byte, []int) {
	return file_mux_mux_proto_rawDescGZIP(), []int{0}
}

func (x *Router) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Router) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Router) GetPathPrefix() string {
	if x != nil {
		return x.PathPrefix
	}
	return ""
}

func (x *Router) GetMethods() []HTTPMethod {
	if x != nil {
		return x.Methods
	}
	return nil
}

func (x *Router) GetHeaders() []string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *Router) GetQueries() []string {
	if x != nil {
		return x.Queries
	}
	return nil
}

func (x *Router) GetSchemes() []HTTPScheme {
	if x != nil {
		return x.Schemes
	}
	return nil
}

func (x *Router) GetSkipClean() bool {
	if x != nil {
		return x.SkipClean
	}
	return false
}

func (x *Router) GetStrictSlash() bool {
	if x != nil {
		return x.StrictSlash
	}
	return false
}

func (x *Router) GetUseEncodedPath() bool {
	if x != nil {
		return x.UseEncodedPath
	}
	return false
}

var file_mux_mux_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptor.MethodOptions)(nil),
		ExtensionType: (*Router)(nil),
		Field:         82295800,
		Name:          "go.terra.mux.router",
		Tag:           "bytes,82295800,opt,name=router",
		Filename:      "mux/mux.proto",
	},
}

// Extension fields to descriptor.MethodOptions.
var (
	// optional go.terra.mux.Router router = 82295800;
	E_Router = &file_mux_mux_proto_extTypes[0]
)

var File_mux_mux_proto protoreflect.FileDescriptor

var file_mux_mux_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x75, 0x78, 0x2f, 0x6d, 0x75, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x67, 0x6f, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x78, 0x1a, 0x20, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd9, 0x02, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x68, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x12, 0x32, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x2e,
	0x6d, 0x75, 0x78, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x07,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x67,
	0x6f, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x78, 0x2e, 0x48, 0x54, 0x54, 0x50,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x07, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x6b, 0x69, 0x70, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x5f, 0x73, 0x6c, 0x61, 0x73, 0x68, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x53, 0x6c, 0x61, 0x73,
	0x68, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x73, 0x65,
	0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x50, 0x61, 0x74, 0x68, 0x2a, 0x6e, 0x0a, 0x0a, 0x48,
	0x54, 0x54, 0x50, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x54,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x45, 0x41, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x50, 0x4f, 0x53, 0x54, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x55, 0x54, 0x10, 0x03, 0x12,
	0x09, 0x0a, 0x05, 0x50, 0x41, 0x54, 0x43, 0x48, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43,
	0x54, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x07,
	0x12, 0x09, 0x0a, 0x05, 0x54, 0x52, 0x41, 0x43, 0x45, 0x10, 0x08, 0x2a, 0x21, 0x0a, 0x0a, 0x48,
	0x54, 0x54, 0x50, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x54, 0x54,
	0x50, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x54, 0x54, 0x50, 0x53, 0x10, 0x01, 0x3a, 0x4f,
	0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xf8, 0xf7, 0x9e, 0x27, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x2e, 0x74, 0x65, 0x72, 0x72, 0x61, 0x2e, 0x6d, 0x75, 0x78,
	0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x42,
	0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x36,
	0x34, 0x66, 0x75, 0x6e, 0x2f, 0x74, 0x65, 0x72, 0x72, 0x61, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x6d, 0x75, 0x78, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mux_mux_proto_rawDescOnce sync.Once
	file_mux_mux_proto_rawDescData = file_mux_mux_proto_rawDesc
)

func file_mux_mux_proto_rawDescGZIP() []byte {
	file_mux_mux_proto_rawDescOnce.Do(func() {
		file_mux_mux_proto_rawDescData = protoimpl.X.CompressGZIP(file_mux_mux_proto_rawDescData)
	})
	return file_mux_mux_proto_rawDescData
}

var file_mux_mux_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_mux_mux_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_mux_mux_proto_goTypes = []interface{}{
	(HTTPMethod)(0),                  // 0: go.terra.mux.HTTPMethod
	(HTTPScheme)(0),                  // 1: go.terra.mux.HTTPScheme
	(*Router)(nil),                   // 2: go.terra.mux.Router
	(*descriptor.MethodOptions)(nil), // 3: google.protobuf.MethodOptions
}
var file_mux_mux_proto_depIdxs = []int32{
	0, // 0: go.terra.mux.Router.methods:type_name -> go.terra.mux.HTTPMethod
	1, // 1: go.terra.mux.Router.schemes:type_name -> go.terra.mux.HTTPScheme
	3, // 2: go.terra.mux.router:extendee -> google.protobuf.MethodOptions
	2, // 3: go.terra.mux.router:type_name -> go.terra.mux.Router
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	3, // [3:4] is the sub-list for extension type_name
	2, // [2:3] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_mux_mux_proto_init() }
func file_mux_mux_proto_init() {
	if File_mux_mux_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mux_mux_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Router); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mux_mux_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_mux_mux_proto_goTypes,
		DependencyIndexes: file_mux_mux_proto_depIdxs,
		EnumInfos:         file_mux_mux_proto_enumTypes,
		MessageInfos:      file_mux_mux_proto_msgTypes,
		ExtensionInfos:    file_mux_mux_proto_extTypes,
	}.Build()
	File_mux_mux_proto = out.File
	file_mux_mux_proto_rawDesc = nil
	file_mux_mux_proto_goTypes = nil
	file_mux_mux_proto_depIdxs = nil
}
